//Matrix class
//create list for two dimensional data
//TODO
//Add functionality of the data
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
public class Matrix {
	public ArrayList<ArrayList<Integer>> data;
	
	public Matrix() {
		//default constructor
		data = new ArrayList<ArrayList<Integer>>();
	}
	public Matrix(ArrayList<ArrayList<Integer>> in) {
		//fill constructor
		data = in;
	}
	
	//functions
	public void resize(int rows, int columns) {
		/*
		 * TODO resize
		 * - Create diff variables to describe the value of data difference
		 * 		between the original and the new resizing being requested
		 * - use if/else statements to determine the needed operations and how many 
		 * 		times those should be run
		 * - use loops to run a certain number of times
		 * - use the given info to add or remove the needed components
		 */
		int difRow = rows - data.size();
		int diffColumns = columns - data.get(0).size();
		//returns the needed number of runs for the program and in which form
		
		//For Rows
		if(difRow > 0) {
			//checks if rows need to be added
			for(int i = 0; i < difRow; i++){
				//adds rows for the difRow value
				data.add(new ArrayList<Integer>());
			}
		} else if(difRow < 0) {
			//checks if rows should be removed
			for(int i = 0; i < Math.abs(difRow); i++) {
				//make it repeat for each row needed
				data.remove(data.size() - 1);
			}
		}
		
		/*
		for(int i =0; i < rows; i++) {
			//for each row add another column 
			data.add(new ArrayList<Integer>());
			for(int j = 0; j < columns; j++) {
				//for each run add another row
				data.get(i).add(0);
			}
		}
		Original way of doing this operations*/
	}
}
