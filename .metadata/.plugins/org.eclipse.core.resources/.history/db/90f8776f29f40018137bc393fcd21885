import javax.swing.*;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MatPane extends JPanel implements ActionListener {

	private JTextField data[][];
	private JComboBox<Integer> field[];
	private Matrix matrix;
	
	/*
	 * This class will be the basis for the graphical view of matrixes
	 * 
	 * something like this:
	 * 
	 * -----Matrix-Dimensions--------
	 * ------------------------------
	 * Matrix Boxes------------------
	 * ---[.....]--[.....]--[.....]--
	 * ---[.....]--[.....]--[.....]--
	 * ---[.....]--[.....]--[.....]--
	 * ---[.....]--[.....]--[.....]--
	 * ------------------------------
	 * -----[Randomize Button]-------
	 */
	
	/*
	 * Functions layout
	 * MatPane()
	 * -creates a new 2x2 matrix filled with zeroes
	 * MatPane(int rows, int columns)
	 * -creates a new rowsxcolumns matrix blank
	 * MatPane(Matrix in)
	 * -Fills
	 * 
	 * Initialize(int rows, int columns)
	 * -used for each of the different initializations and contains that code
	 * Resize(int rows, int columns)
	 * -resizes the full matrix
	 * 
	 * Initialize objects(running continuously
	 * dimensions()
	 * -will create the dimensions dropboxes and set up their ability to change the matrix
	 * random()
	 * -set up the random button to randomly fill everything
	 */
	
	//Constructors ****************
	
	//Initializers ****************
	public void Initialize(int rows, int columns) {
		resize(rows, columns);
	}
	//Objects Initializers ********
	private void combBox() {
		field = new JComboBox[2];
		Integer label[] = new Integer[] {1, 2, 3, 4, 5};
		
		field[0] = new JComboBox<Integer>(label);
		field[1] = new JComboBox<Integer>(label);
		field[0].addActionListener(this);
		field[0].setActionCommand("cr");
		//sets it up to resize to rows
		field[1].addActionListener(this);
		field[1].setActionCommand("cc");
	}
	private void button() {
		JButton button = new JButton("Randomize");
		button.addActionListener(this);
		button.setActionCommand("Rand");
	}
	//Methods**********************
	public void resize(int rows, int columns) {
		data = new JTextField[rows][columns];
		matrix = new Matrix(rows, columns);
		//create arrays
		for(int i = 0; i < rows; i++) {
			for(int j = 0; j < columns; j++) {
				data[i][j] = new JTextField("0", 10);
				//new text fields with a size of 10
			}
		}
	}
	//Handle Actions
	public void actionPerformed(ActionEvent e) {
		if(e.getActionCommand() == "cr") {
			//change the row value to the value of the current combobox
			int row = (Integer)field[0].getSelectedItem();
			resize(row , matrix.getColumn());
		}
		else if(e.getActionCommand() == "cc") {
			//change column value
			resize(matrix.getRow(), (Integer)field[1].getSelectedItem());
		}
	}
}
